@import 'variables';
@mixin transition($property) {
    -o-transition: $property;
    -moz-transition: $property;
    -webkit-transition: $property;
    transition: $property;
}

@mixin transform($property) {
    -o-transform: $property;
    -moz-transform: $property;
    -webkit-transform: $property;
    transform: $property;
}


@mixin backgroundGradient($direction, $fromColor, $toColor) {
    background-color: $toColor; /* Fallback Color */
    background: -webkit-gradient(linear, $direction, from($fromColor), to($toColor)); /* Saf4+, Chrome */
    background: -webkit-linear-gradient($direction, $fromColor, $toColor); /* Chrome 10+, Saf5.1+, iOS 5+ */
    background:    -moz-linear-gradient($direction, $fromColor, $toColor); /* FF3.6 */
    background:     -ms-linear-gradient($direction, $fromColor, $toColor); /* IE10 */
    background:      -o-linear-gradient($direction, $fromColor, $toColor); /* Opera 11.10+ */
    background:         linear-gradient($direction, $fromColor, $toColor);

}

@mixin respond-to($breakpoint) {
    // If the key exists in the map
      @if map-has-key($breakpoints, $breakpoint) {
          // Prints a media query based on the value
          @media #{inspect(map-get($breakpoints, $breakpoint))} {
              @content;
          }
      }
  
      // If the key doesn't exist in the map
      @else {
          @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
          + "Available breakpoints are: #{map-keys($breakpoints)}.";
      }
  }