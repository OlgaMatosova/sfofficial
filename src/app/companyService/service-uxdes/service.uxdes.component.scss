@import "../companyService.component";

.serviceDetails ::ng-deep {
    @include respond-to("small") {
        margin-top: 40px;
    }
    .mat-tab-group {
        flex-direction: row;
        border-top: 1px solid $borderColor;
        border-bottom: 1px solid $borderColor;
    }
    .mat-tab-list {
        transition: none;
    }
    .mat-tab-labels {
        flex-wrap: wrap;
        justify-content: center;
    }
    @include respond-to("small") {
        .mat-tab-group {
            flex-direction: column-reverse;
            width: 100%;
        }
        .mat-tab-labels {
            flex-wrap: nowrap;
            // margin-left: 30px;
        }
    }
    .mat-tab-body-wrapper,
    .mat-tab-header {
        height: auto;
        width: 50%;
        @include respond-to("small") {
            width: 100%;
        }
    }
    .mat-tab-header,
    .mat-tab-nav-bar {
        border: 0;
    }
    .mat-tab-header {
        background: $borderColor;
        @include respond-to("small") {
            padding: 0;
        }
        padding: 65px 15px;
    }
    .mat-tab-label {
        @include respond-to("small") {
            width: 100%;
            margin: 0;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            h5 {
                margin-top: 15px;
            }
        }
        height: auto;
        background: $lightColor;
        padding: 20px 8px;
        width: 30%;
        margin: 1%;
        @include transition(fill 0.5s ease-out);
        opacity: 1;

        img {
            max-height: 70px;
            @include respond-to("small") {
                height: 50px;
            }
        }

        svg {
            width: 50px;
            fill: $lightGrey;
            stroke: $lightGrey;
            @include transition(fill 0.5s ease-out);
            g {
                @include transition(fill 0.5s ease-out);
                opacity: 0.6;
            }
        }

        &:hover {
            color: $btnFirstColor;
            img {
                filter: invert(33%) sepia(19%) saturate(3190%) hue-rotate(132deg) brightness(137%) contrast(82%);
            }
            svg {
                fill: $btnFirstColor;
                stroke: $btnFirstColor;
                g {
                    fill: $btnFirstColor;
                }
            }
        }

        h5 {
            opacity: 0.6;
            font-size: 14px;
            line-height: 18px;
            margin-top: 12px;
            font-weight: 600;
            @include transition(fill 0.5s ease-out);
        }

        .mat-tab-label-content {
            flex-direction: column;
            white-space: break-spaces;
        }
    }

    .mat-tab-body-wrapper {
        @include respond-to("small") {
            padding: 0 5px;
        }
        padding: 0 100px;
        min-height: 100%;
        &::after {
            content: "";
            background: rgba(255, 255, 255, 0.2);
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }

        .mat-tab-body-content {
            padding: 20px;
            background: $lightColor;
            justify-content: center;
            display: flex;
            flex-direction: column;
            h3 {
                color: #333;
                font-size: 22px;
                margin-bottom: 25px;
                font-weight: 500;
                position: relative;

                &::after {
                    content: "";
                    width: 45px;
                    left: 0;
                    position: absolute;
                    bottom: -5px;
                    border-bottom: 2px solid $btnFirstColor;
                }
            }
        }
    }
    .mat-ink-bar {
        display: none;
    }
    .mat-tab-label-active {
        color: $btnFirstColor;
        img {
            filter: invert(33%) sepia(19%) saturate(3190%) hue-rotate(132deg) brightness(137%) contrast(82%);
        }
        svg {
            fill: $btnFirstColor;
            stroke: $btnFirstColor;
            g {
                fill: $btnFirstColor;
            }
        }
    }
}
